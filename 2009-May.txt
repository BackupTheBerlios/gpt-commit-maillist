From gpt-commit-noreply at mail.berlios.de  Fri May 29 05:14:48 2009
From: gpt-commit-noreply at mail.berlios.de (gpt-commit-noreply at mail.berlios.de)
Date: Fri, 29 May 2009 05:14:48 +0200
Subject: [gpt-commit] r532 - in trunk/gpt: src src/modules/c_translator
	src/modules/interpreter src/modules/x86 test
Message-ID: <200905290314.n4T3Em99006570@sheep.berlios.de>

Author: adorilson
Date: 2009-05-29 05:13:43 +0200 (Fri, 29 May 2009)
New Revision: 532

Modified:
   trunk/gpt/src/GPT.cpp
   trunk/gpt/src/GPT.hpp
   trunk/gpt/src/main.cpp
   trunk/gpt/src/modules/c_translator/pt2c.g
   trunk/gpt/src/modules/interpreter/InterpreterEval.cpp
   trunk/gpt/src/modules/interpreter/InterpreterEval.hpp
   trunk/gpt/src/modules/interpreter/interpreter.g
   trunk/gpt/src/modules/x86/x86.g
   trunk/gpt/test/tester.gpt
Log:
NEW:
- Adicionado suporte a retorne no bloco principal, no modulo interpretador.



Modified: trunk/gpt/src/GPT.cpp
===================================================================
--- trunk/gpt/src/GPT.cpp	2009-03-30 03:36:34 UTC (rev 531)
+++ trunk/gpt/src/GPT.cpp	2009-05-29 03:13:43 UTC (rev 532)
@@ -264,15 +264,15 @@
   }
 }
 
-bool GPT::interpret(const list<string>& ifnames, const string& host, int port) {
+int GPT::interpret(const list<string>& ifnames, const string& host, int port) {
   if(!prologue(ifnames)) {
     return false;
   }
 
   InterpreterWalker interpreter(_stable, host, port);
-  interpreter.algoritmo(_astree);
+  int r = interpreter.algoritmo(_astree);
 
-  return true;
+  return r;
 }
 
 

Modified: trunk/gpt/src/GPT.hpp
===================================================================
--- trunk/gpt/src/GPT.hpp	2009-03-30 03:36:34 UTC (rev 531)
+++ trunk/gpt/src/GPT.hpp	2009-05-29 03:13:43 UTC (rev 532)
@@ -48,7 +48,7 @@
 
   bool compile(const list<string>& ifnames, bool genBinary = true);
   bool translate2C(const list<string>& ifnames);
-  bool interpret(const list<string>& ifnames, const string& host, int port);
+  int interpret(const list<string>& ifnames, const string& host, int port);
   
 private:
   GPT();

Modified: trunk/gpt/src/main.cpp
===================================================================
--- trunk/gpt/src/main.cpp	2009-03-30 03:36:34 UTC (rev 531)
+++ trunk/gpt/src/main.cpp	2009-05-29 03:13:43 UTC (rev 532)
@@ -260,7 +260,9 @@
       success = GPT::self()->compile(_ifilenames, false);
       break;
     case CMD_INTERPRET:
-      success = GPT::self()->interpret(_ifilenames, _host, atoi(_port.c_str()));
+      int result;
+      result = GPT::self()->interpret(_ifilenames, _host, atoi(_port.c_str()));
+      return result; 
       break;
     case CMD_INVALID:
       break;

Modified: trunk/gpt/src/modules/c_translator/pt2c.g
===================================================================
--- trunk/gpt/src/modules/c_translator/pt2c.g	2009-03-30 03:36:34 UTC (rev 531)
+++ trunk/gpt/src/modules/c_translator/pt2c.g	2009-05-29 03:13:43 UTC (rev 532)
@@ -710,7 +710,7 @@
   if (isGlobalEscope){
     expecting_type = TIPO_INTEIRO; // o retorno no bloco principal ? do TIPO_INTEIRO
   }else{
-  	expecting_type = stable.getSymbol(SymbolTable::GlobalScope, _currentScope, true).type.primitiveType();
+    expecting_type = stable.getSymbol(SymbolTable::GlobalScope, _currentScope, true).type.primitiveType();
   }
   
   production e;

Modified: trunk/gpt/src/modules/interpreter/InterpreterEval.cpp
===================================================================
--- trunk/gpt/src/modules/interpreter/InterpreterEval.cpp	2009-03-30 03:36:34 UTC (rev 531)
+++ trunk/gpt/src/modules/interpreter/InterpreterEval.cpp	2009-05-29 03:13:43 UTC (rev 532)
@@ -767,6 +767,10 @@
   return retExpr;
 }
 
+int InterpreterEval::getReturning(){
+  return atoi(retExpr.value.c_str());
+}
+
 //----------- Debugger -------------------------
 
 void InterpreterEval::nextCmd(const string& file, int line) {

Modified: trunk/gpt/src/modules/interpreter/InterpreterEval.hpp
===================================================================
--- trunk/gpt/src/modules/interpreter/InterpreterEval.hpp	2009-03-30 03:36:34 UTC (rev 531)
+++ trunk/gpt/src/modules/interpreter/InterpreterEval.hpp	2009-05-29 03:13:43 UTC (rev 532)
@@ -151,6 +151,9 @@
  
   void setReturnExprValue(ExprValue& v);
   ExprValue getReturnExprValue(const string&);
+  
+  int getReturning();
+  
 //----------- Debugger -------------------------
 
   void nextCmd(const string& file, int line);

Modified: trunk/gpt/src/modules/interpreter/interpreter.g
===================================================================
--- trunk/gpt/src/modules/interpreter/interpreter.g	2009-03-30 03:36:34 UTC (rev 531)
+++ trunk/gpt/src/modules/interpreter/interpreter.g	2009-05-29 03:13:43 UTC (rev 532)
@@ -143,8 +143,9 @@
   )
 
 */
-algoritmo
+algoritmo returns [int ret]
 {
+  ret = 0;
   topnode = _t;
   interpreter.init(_t->getFilename());  
   _t = _t->getNextSibling();
@@ -153,6 +154,11 @@
   }
 }
   : inicio    
+    {
+      if (_returning){
+        ret = interpreter.getReturning();
+      }
+    }
   ;
 
 inicio

Modified: trunk/gpt/src/modules/x86/x86.g
===================================================================
--- trunk/gpt/src/modules/x86/x86.g	2009-03-30 03:36:34 UTC (rev 531)
+++ trunk/gpt/src/modules/x86/x86.g	2009-05-29 03:13:43 UTC (rev 532)
@@ -340,7 +340,7 @@
   if (isGlobalEscope){
     expecting_type = TIPO_INTEIRO; // o retorno no bloco principal ? do TIPO_INTEIRO
   }else{
-	expecting_type = stable.getSymbol(SymbolTable::GlobalScope, x86.currentScope(), true).type.primitiveType();        
+    expecting_type = stable.getSymbol(SymbolTable::GlobalScope, x86.currentScope(), true).type.primitiveType();
   }  
 }
   : #(T_KW_RETORNE (TI_NULL|etype=expr[expecting_type]))

Modified: trunk/gpt/test/tester.gpt
===================================================================
--- trunk/gpt/test/tester.gpt	2009-03-30 03:36:34 UTC (rev 531)
+++ trunk/gpt/test/tester.gpt	2009-05-29 03:13:43 UTC (rev 532)
@@ -30,6 +30,7 @@
 
 //testar_castings();
 
+  imprima("Verifique se o resultado de 'echo $?' ? 42");
   retorne 42;
   imprima("se imprimiu essa linha, o retorne do bloco principal n?o funcionou");
 fim



